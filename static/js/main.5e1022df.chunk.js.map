{"version":3,"sources":["components/Header.js","store/actionConstants.js","store/actions.js","store/store.js","components/PtoGeneralInfo.js","components/Form.js","components/PtoEntry.js","components/List.js","components/PtoEntries.js","components/App.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","actionConstants","ADD_PTO_ENTRY","SORT_PTO_ENTRIES","CALC_ENTRY_BALANCES","sortPtoEntries","type","payload","calcEntryBalances","defaultState","rollover","accrualRate","entries","initialPTOEntry","id","uuidv1","startDate","Date","toLocaleDateString","endDate","description","used","credit","push","i","month","acrrualEntry","store","createStore","state","arguments","length","undefined","action","Object","objectSpread","toConsumableArray","concat","sort","b","aStartDate","getTime","bStartDate","aEndDate","bEndDate","earnedBalance","projectedBalance","forEach","entry","PtoGeneralInfo","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dispatch","today","lastEntryBeforeToday","Math","round","lastEntry","props","getEarnedBalance","getProjectedBalance","connect","ConnectedForm","initialState","moment","hoursRequested","errors","handleChange","bind","assertThisInitialized","handleStartDatePickerChange","handleEndDatePickerChange","handleSubmit","firstDate","secondDate","date1","date2","timeDiff","abs","ceil","event","setState","defineProperty","target","value","validateEntry","daysBetween","date","setHoursRequested","valid","trim","error","message","preventDefault","_this$state","format","addPtoEntry","_this$state2","onSubmit","htmlFor","react_datepicker_es","selected","onChange","required","map","key","Form","PtoEntry","components_Form","List","classes","getRowClasses","PtoEntries","components_List","App","components_Header","components_PtoGeneralInfo","components_PtoEntry","components_PtoEntries","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.5e1022df.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n   \r\n   render() {\r\n       return (\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-12\">\r\n                    <h1 className=\"app-header\">React PTO Tracker</h1>\r\n                </div>\r\n            </div>\r\n        ); \r\n    }\r\n};\r\n\r\nexport default Header;","\r\nconst actionConstants = {\r\n    ADD_PTO_ENTRY: 'ADD_PTO_ENTRY',\r\n    SORT_PTO_ENTRIES: 'SORT_PTO_ENTRIES',\r\n    CALC_ENTRY_BALANCES: 'CALC_ENTRY_BALANCES'\r\n};\r\n\r\nexport default actionConstants; ","import actionConstants from './actionConstants';\r\nexport const addPtoEntry = entry => ({ type: actionConstants.ADD_PTO_ENTRY, payload: entry });\r\nexport const sortPtoEntries = () => ( { type: actionConstants.SORT_PTO_ENTRIES, payload: null});\r\nexport const calcEntryBalances = () => ({ type: actionConstants.CALC_ENTRY_BALANCES, payload: null});","import { createStore } from 'redux';\r\nimport actionConstants from './actionConstants';\r\n\r\nimport uuidv1 from \"uuid\";\r\n\r\nconst defaultState = { \r\n    rollover: 38.82,\r\n    accrualRate: (20 * 8)/12,\r\n    entries: []\r\n};\r\n\r\nif(defaultState.rollover > 0){\r\n    const initialPTOEntry = {\r\n      id: uuidv1(),\r\n      startDate: new Date('01/01/19').toLocaleDateString(),\r\n      endDate: new Date('01/01/19').toLocaleDateString(),\r\n      description: \"2019 Initial Balance\",\r\n      used: 0.00,\r\n      credit: defaultState.rollover\r\n    }\r\n    defaultState.entries.push(initialPTOEntry);\r\n}\r\nfor(let i = 1; i <= 12; i++){\r\n    let month = i < 10 ? \"0\" + i : i;\r\n    const acrrualEntry = {\r\n        id: uuidv1(),\r\n        startDate: new Date(month + \"/01/19\").toLocaleDateString(),\r\n        endDate: new Date(month + \"/01/19\").toLocaleDateString(),\r\n        description: month + \"/01/19 Acrrual\",\r\n        used: 0.00,\r\n        credit: defaultState.accrualRate\r\n      }\r\n      defaultState.entries.push(acrrualEntry);\r\n}\r\n\r\n\r\nconst reducer = function (state = defaultState, action) {\r\n    switch(action.type) {\r\n        case actionConstants.ADD_PTO_ENTRY:\r\n         return { ...state, entries: [...state.entries, action.payload] };\r\n        case actionConstants.SORT_PTO_ENTRIES:\r\n            state.entries.sort( (a,b) =>{\r\n                let aStartDate = new Date(a.startDate).getTime();\r\n                let bStartDate = new Date(b.startDate).getTime();\r\n                let aEndDate = new Date(a.endDate).getTime();\r\n                let bEndDate = new Date(b.endDate).getTime();\r\n\r\n                if(aStartDate === bStartDate)\r\n                    return bEndDate - aEndDate;\r\n                \r\n                return aStartDate - bStartDate ;\r\n            });\r\n            return state;\r\n        case actionConstants.CALC_ENTRY_BALANCES:\r\n            let earnedBalance = 0;\r\n            let monthsInYear = 12;\r\n            let projectedBalance = state.rollover + state.accrualRate * monthsInYear;\r\n            state.entries.forEach(entry =>{\r\n                earnedBalance = entry.credit - entry.used + earnedBalance;\r\n                projectedBalance = projectedBalance - entry.used;\r\n                entry.earnedBalance = earnedBalance;\r\n                entry.projectedBalance = projectedBalance;\r\n            });\r\n            return state;\r\n        default:\r\n         return state;\r\n    }\r\n};\r\n\r\nconst store = createStore(reducer);\r\n\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport { connect} from 'react-redux';\r\nimport { sortPtoEntries, calcEntryBalances } from '../store/actions';\r\nimport store from '../store/store';\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        rollover: state.rollover,\r\n        accrualRate: state.accrualRate,\r\n        entries: state.entries\r\n    };\r\n};\r\n\r\nclass PtoGeneralInfo extends Component {\r\n   constructor(){\r\n        super();\r\n        store.dispatch(sortPtoEntries());\r\n        store.dispatch(calcEntryBalances());\r\n   }\r\n   getEarnedBalance(entries){\r\n    let today = new Date().getTime();\r\n    let lastEntryBeforeToday = entries[0];\r\n    entries.forEach(entry =>{\r\n         if(today > new Date(entry.endDate).getTime()){\r\n             lastEntryBeforeToday = entry;\r\n         }\r\n    });\r\n    return Math.round(lastEntryBeforeToday.earnedBalance*100)/100;\r\n   }\r\n   getProjectedBalance(entries){\r\n    const lastEntry = entries[this.props.entries.length-1];\r\n    return Math.round(lastEntry.projectedBalance*100)/100;\r\n   }\r\n   render() {\r\n        const earnedBalance = this.getEarnedBalance(this.props.entries);\r\n        const projectedBalance = this.getProjectedBalance(this.props.entries);\r\n\r\n       return (\r\n           <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <label>Today: </label>\r\n                        {new Date().toLocaleDateString()}\r\n                    </div>\r\n                    <div className=\"col-md-4 middle\">\r\n                        <label>2018 Rollover: </label>\r\n                        {this.props.rollover}\r\n                    </div>\r\n                    <div className=\"col-md-4 last\">\r\n                        <label>Accrual Rate: </label>\r\n                        {Math.round(this.props.accrualRate*100)/100}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <label>Projected Accrual: </label>\r\n                        {this.props.accrualRate * 12}\r\n                    </div>\r\n                    <div className=\"col-md-4 middle\">\r\n                        <label>Earned PTO: </label>\r\n                        {earnedBalance}\r\n                    </div>\r\n                    <div className=\"col-md-4 last\">\r\n                        <label>Projected PTO: </label>\r\n                        {projectedBalance}\r\n                    </div>\r\n                </div>\r\n           </div>\r\n        \r\n        ); \r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps) (PtoGeneralInfo);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from \"moment\";\r\nimport uuidv1 from \"uuid\";\r\nimport { addPtoEntry, sortPtoEntries, calcEntryBalances } from \"../store/actions\";\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addPtoEntry: entry => dispatch(addPtoEntry(entry)),\r\n    sortPtoEntries: () => dispatch(sortPtoEntries()),\r\n    calcEntryBalances: () => dispatch(calcEntryBalances())\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return { entries: state.entries };\r\n};\r\n\r\nclass ConnectedForm extends Component {\r\n  initialState = {\r\n    startDate: moment(),\r\n    endDate: moment(),\r\n    description: \"\",\r\n    hoursRequested: 8,\r\n    errors: []\r\n  };\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = this.initialState;\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleStartDatePickerChange = this.handleStartDatePickerChange.bind(this);\r\n    this.handleEndDatePickerChange = this.handleEndDatePickerChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  daysBetween(firstDate, secondDate){\r\n    let date1 = new Date(firstDate).getTime();\r\n    let date2 = new Date(secondDate).getTime();\r\n    let timeDiff = Math.abs(date2 - date1) ;\r\n    const dayInMS = 1000*3600*24;\r\n    timeDiff += dayInMS;\r\n    return Math.ceil(timeDiff/dayInMS) * 8;\r\n  }\r\n  handleChange(event) {\r\n    this.setState({ [event.target.id]: event.target.value });\r\n    if(this.state.errors.length > 0){\r\n      this.validateEntry();\r\n    }\r\n  }\r\n  setHoursRequested(startDate, endDate){\r\n    if(startDate && endDate){\r\n      let hoursRequested = this.daysBetween(startDate, endDate);\r\n      this.setState({hoursRequested: hoursRequested})\r\n    }\r\n  }\r\n  handleStartDatePickerChange(date){\r\n    this.setState({ startDate: date});\r\n    this.setHoursRequested(date, this.state.endDate);\r\n    if(this.state.errors.length > 0){\r\n      this.validateEntry();\r\n    }\r\n  }\r\n  handleEndDatePickerChange(date){\r\n    this.setState({ endDate: date});\r\n    this.setHoursRequested(this.state.startDate, date);\r\n    if(this.state.errors.length > 0){\r\n      this.validateEntry();\r\n    }\r\n  }\r\n  validateEntry(){\r\n    let valid = true;\r\n    this.setState({errors: []});\r\n    if(!this.state.startDate || !this.state.endDate || !this.state.description.trim()){\r\n      const error = {\r\n        id: uuidv1(),\r\n        message: \"Requires Start Date, End Date, and Description\"\r\n      };\r\n      this.setState({errors: [...this.state.errors, error]});\r\n      valid = false;\r\n    }\r\n\r\n    if(this.state.startDate > this.state.endDate){\r\n      const error = {\r\n        id: uuidv1(),\r\n        message: \"Start Date must be less then End Date\"\r\n      };\r\n      this.setState({errors: [...this.state.errors, error]});\r\n      valid = false;\r\n    }\r\n    return valid;\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    if(!this.validateEntry()){\r\n      return;\r\n    }\r\n\r\n    const { description, hoursRequested } = this.state;\r\n    let startDate = this.state.startDate.format(\"MM/DD/YYYY\");\r\n    let endDate = this.state.endDate.format(\"MM/DD/YYYY\");\r\n    const credit = 0;\r\n    const used = hoursRequested;\r\n    const id = uuidv1();\r\n    this.props.addPtoEntry({ id, startDate, endDate, description, used, credit });\r\n    this.props.sortPtoEntries();\r\n    this.props.calcEntryBalances();\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  render() {\r\n    const { startDate, endDate, description, hoursRequested } = this.state;\r\n\r\n    return (\r\n       <form onSubmit={this.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3 \">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"startDate\">Start Date</label>\r\n              <DatePicker className=\"form-control\"\r\n                selected={startDate}\r\n                onChange={this.handleStartDatePickerChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3 \">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"endDate\">End Date</label>\r\n              <DatePicker className=\"form-control\"\r\n                selected={endDate}\r\n                onChange={this.handleEndDatePickerChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3 \">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                value={description}\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3 \">\r\n            <button type=\"submit\" className=\"submit-pto-entry btn btn-success btn-lg form-control\">\r\n              Request {hoursRequested} Hours\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className={'alert alert-danger' + (this.state.errors.length > 0 ? '' : 'hide')}>\r\n          {this.state.errors.map(error => (\r\n            <p key={error.id} className=\"red\">{error.message}</p>\r\n          ))}\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst Form = connect(mapStateToProps, mapDispatchToProps)(ConnectedForm);\r\n\r\nexport default Form;","import React, { Component } from 'react';\r\nimport Form from './Form';\r\n\r\nclass PtoEntry extends Component {\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-12 \">\r\n                        <h3>Add a PTO Entry</h3>\r\n                    </div>\r\n                </div>\r\n                <Form />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PtoEntry;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        entries: state.entries,\r\n        rollover: state.rollover,\r\n        accrualRate: state.accrualRate\r\n     };\r\n};\r\nclass List extends Component {\r\n    getRowClasses(entry){\r\n        const today = new Date().getTime();\r\n        let classes = '';\r\n        if(entry.used > 0){\r\n            classes += ' pto-entries-used-pto-row';\r\n        }\r\n        if(new Date(entry.endDate).getTime() > today){\r\n            classes += ' pto-entries-future-pto-row';\r\n        }\r\n        return classes;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"row pto-entries-header\">\r\n                        <div className=\"col-md-2\">\r\n                            Start Date\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                            End Date\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                            Description\r\n                        </div>\r\n                        <div className=\"col-md-1\">\r\n                            Used\r\n                        </div>\r\n                        <div className=\"col-md-1\">\r\n                            Credit\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                            Earned Balance\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                            Projected Balance\r\n                        </div>\r\n                    </div>\r\n                    {this.props.entries.map(entry => (\r\n                        <div className={\"row pto-entries-row \" + this.getRowClasses(entry)} key={entry.id}>\r\n                            <div className=\"col-md-2\">\r\n                                {entry.startDate}\r\n                            </div>\r\n                            <div className=\"col-md-2\">\r\n                                {entry.endDate}\r\n                            </div>\r\n                            <div className=\"col-md-2\">\r\n                                {entry.description}\r\n                            </div>\r\n                            <div className=\"col-md-1\">\r\n                                {Math.round(entry.used*100)/100}\r\n                            </div>\r\n                            <div className=\"col-md-1\">\r\n                                {Math.round(entry.credit*100)/100}\r\n                            </div>\r\n                            <div className=\"col-md-2\">\r\n                                {Math.round(entry.earnedBalance*100)/100}\r\n                            </div>\r\n                            <div className=\"col-md-2\">\r\n                                {Math.round(entry.projectedBalance*100)/100}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps) (List);\r\n","import React, { Component } from 'react';\r\nimport List from './List';\r\n\r\nclass PtoEntries extends Component {\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12 \">\r\n                        <h3>Pto Entries</h3>\r\n                    </div>\r\n                </div>\r\n                <List/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PtoEntries;","import React, { Component } from 'react';\n\n\nimport Header from './Header';\nimport PtoGeneralInfo from './PtoGeneralInfo';\nimport PtoEntry from './PtoEntry';\nimport PtoEntries from './PtoEntries';\n\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <div className=\"container\">\n        <Header />\n\n        <PtoGeneralInfo />\n\n        <PtoEntry />\n\n        <PtoEntries />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport store from './store/store';\n\nReactDOM.render(\n    \n    <Provider store={store}>\n        <App />\n    </Provider>, \n\n    document.getElementById('root')\n);\n"],"sourceRoot":""}