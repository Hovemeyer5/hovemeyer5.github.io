{"version":3,"sources":["components/Header.js","components/PtoGeneralInfo.js","models/PtoEntry.js","reducers/actions.js","components/Form.js","components/PtoFormEntrySection.js","components/List.js","components/PtoEntries.js","reducers/defaultState.js","reducers/index.js","store/store.js","components/App.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","PtoGeneralInfo","entries","length","today","Date","getTime","lastEntryBeforeToday","forEach","entry","endDate","Math","round","earnedBalance","lastEntry","this","props","projectedBalance","getEarnedBalance","getProjectedBalance","toLocaleDateString","rollover","accrualRate","connect","state","PtoEntry","ptoEntry","id","startDate","description","used","credit","projectedBalanced","actions","sortPtoEntries","type","calcEntryBalances","reqestPtoEntries","receivedPtoEntries","payload","ConnectedForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","initialState","moment","hoursRequested","errors","handleChange","bind","assertThisInitialized","handleStartDatePickerChange","handleEndDatePickerChange","handleSubmit","firstDate","secondDate","date1","date2","timeDiff","abs","ceil","event","setState","defineProperty","target","value","validateEntry","daysBetween","date","setHoursRequested","valid","trim","error","uuidv1","message","toConsumableArray","concat","preventDefault","_this$state","format","addPtoEntry","_this$state2","onSubmit","htmlFor","react_datepicker_es","selected","onChange","required","map","key","Form","dispatch","PtoFormEntrySection","components_Form","List","classes","getRowClasses","formatDecimal","PtoEntries","components_List","defaultState","reducer","arguments","undefined","action","objectSpread","sortedEntries","slice","sort","b","aStartDate","bStartDate","aEndDate","bEndDate","balanceCalculatedEntries","loading","store","createStore","applyMiddleware","thunk","logger","App","fetch","then","response","json","console","log","components_Header","components_PtoGeneralInfo","components_PtoFormEntrySection","components_PtoEntries","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.727b8d12.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n   \r\n   render() {\r\n       return (\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-12\">\r\n                    <h1 className=\"app-header\">React PTO Tracker</h1>\r\n                </div>\r\n            </div>\r\n        ); \r\n    }\r\n};\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { connect} from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        rollover: state.rollover,\r\n        accrualRate: state.accrualRate,\r\n        entries: state.entries\r\n    };\r\n};\r\n\r\nclass PtoGeneralInfo extends Component {\r\n   \r\n   getEarnedBalance(entries){\r\n    if(entries.length === 0){\r\n        return;\r\n    }\r\n    let today = new Date().getTime();\r\n    let lastEntryBeforeToday = entries[0];\r\n    entries.forEach(entry =>{\r\n         if(today > new Date(entry.endDate).getTime()){\r\n             lastEntryBeforeToday = entry;\r\n         }\r\n    });\r\n    return Math.round(lastEntryBeforeToday.earnedBalance*100)/100;\r\n   }\r\n   getProjectedBalance(entries){\r\n    if(entries.length === 0){\r\n        return;\r\n    }  \r\n    const lastEntry = entries[this.props.entries.length-1];\r\n    return Math.round(lastEntry.projectedBalance*100)/100;\r\n   }\r\n   render() {\r\n        const earnedBalance = this.getEarnedBalance(this.props.entries);\r\n        const projectedBalance = this.getProjectedBalance(this.props.entries);\r\n\r\n       return (\r\n           <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <label>Today: </label>\r\n                        {new Date().toLocaleDateString()}\r\n                    </div>\r\n                    <div className=\"col-md-4 middle\">\r\n                        <label>2018 Rollover: </label>\r\n                        {this.props.rollover}\r\n                    </div>\r\n                    <div className=\"col-md-4 last\">\r\n                        <label>Accrual Rate: </label>\r\n                        {Math.round(this.props.accrualRate*100)/100}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <label>Projected Accrual: </label>\r\n                        {this.props.accrualRate * 12}\r\n                    </div>\r\n                    <div className=\"col-md-4 middle\">\r\n                        <label>Earned PTO: </label>\r\n                        {earnedBalance}\r\n                    </div>\r\n                    <div className=\"col-md-4 last\">\r\n                        <label>Projected PTO: </label>\r\n                        {projectedBalance}\r\n                    </div>\r\n                </div>\r\n           </div>\r\n        \r\n        ); \r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps) (PtoGeneralInfo);","let PtoEntry = function (ptoEntry) {\r\n\r\n    this.id = ptoEntry.id;\r\n    this.startDate = ptoEntry.startDate;\r\n    this.endDate = ptoEntry.endDate;\r\n    this.description = ptoEntry.description;\r\n    this.used = ptoEntry.used;\r\n    this.credit = ptoEntry.credit;\r\n    this.earnedBalance = ptoEntry.earnedBalance ? ptoEntry.earnedBalance : 0;\r\n    this.projectedBalance = ptoEntry.projectedBalanced ? ptoEntry.projectedBalanced : 0;\r\n}\r\n\r\nexport default PtoEntry;","import PtoEntry from '../models/PtoEntry';\r\n\r\nexport const actions = {\r\n    ADD_PTO_ENTRY: 'ADD_PTO_ENTRY',\r\n    SORT_PTO_ENTRIES: 'SORT_PTO_ENTRIES',\r\n    CALC_ENTRY_BALANCES: 'CALC_ENTRY_BALANCES',\r\n    REQUEST_PTO_ENTRIES: 'REQUEST_PTO_ENTRIES',\r\n    RECEIVED_PTO_ENTRIES: 'RECEIVED_PTO_ENTIRES'\r\n};\r\n\r\n\r\nexport const addPtoEntry = entry => ({ type: actions.ADD_PTO_ENTRY, payload: entry });\r\nexport const sortPtoEntries = () => ( { type: actions.SORT_PTO_ENTRIES});\r\nexport const calcEntryBalances = () => ({ type: actions.CALC_ENTRY_BALANCES});\r\n\r\nexport const reqestPtoEntries = () => ({ type: actions.REQUEST_PTO_ENTRIES});\r\nexport const receivedPtoEntries = (payload) => ({ type: actions.RECEIVED_PTO_ENTRIES, payload: payload});\r\n\r\nexport function fetchPtoEntries() {\r\n    return function (dispatch) {\r\n      dispatch(reqestPtoEntries());\r\n      return fetch(`http://yahst.com/wt/ptotracker/api/initial.php`)\r\n      .then(\r\n         response => response.json(),\r\n         error => console.log('An error occurred.', error),\r\n        )\r\n      .then((payload) => {\r\n          payload = payload.map(ptoEntry => new PtoEntry(ptoEntry));\r\n          dispatch(receivedPtoEntries(payload));\r\n          dispatch(sortPtoEntries());\r\n          dispatch(calcEntryBalances());\r\n      },\r\n     );\r\n    };\r\n   }","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from \"moment\";\r\nimport uuidv1 from \"uuid\";\r\nimport { addPtoEntry, sortPtoEntries, calcEntryBalances } from \"../reducers/actions\";\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addPtoEntry: entry => dispatch(addPtoEntry(entry)),\r\n    sortPtoEntries: () => dispatch(sortPtoEntries()),\r\n    calcEntryBalances: () => dispatch(calcEntryBalances())\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return { entries: state.entries };\r\n};\r\n\r\nclass ConnectedForm extends Component {\r\n  initialState = {\r\n    startDate: moment(),\r\n    endDate: moment(),\r\n    description: \"\",\r\n    hoursRequested: 8,\r\n    errors: []\r\n  };\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = this.initialState;\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleStartDatePickerChange = this.handleStartDatePickerChange.bind(this);\r\n    this.handleEndDatePickerChange = this.handleEndDatePickerChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  daysBetween(firstDate, secondDate){\r\n    let date1 = new Date(firstDate).getTime();\r\n    let date2 = new Date(secondDate).getTime();\r\n    let timeDiff = Math.abs(date2 - date1) ;\r\n    const dayInMS = 1000*3600*24;\r\n    timeDiff += dayInMS;\r\n    return Math.ceil(timeDiff/dayInMS) * 8;\r\n  }\r\n  handleChange(event) {\r\n    this.setState({ [event.target.id]: event.target.value });\r\n    if(this.state.errors.length > 0){\r\n      this.validateEntry();\r\n    }\r\n  }\r\n  setHoursRequested(startDate, endDate){\r\n    if(startDate && endDate){\r\n      let hoursRequested = this.daysBetween(startDate, endDate);\r\n      this.setState({hoursRequested: hoursRequested})\r\n    }\r\n  }\r\n  handleStartDatePickerChange(date){\r\n    this.setState({ startDate: date});\r\n    this.setHoursRequested(date, this.state.endDate);\r\n    if(this.state.errors.length > 0){\r\n      this.validateEntry();\r\n    }\r\n  }\r\n  handleEndDatePickerChange(date){\r\n    this.setState({ endDate: date});\r\n    this.setHoursRequested(this.state.startDate, date);\r\n    if(this.state.errors.length > 0){\r\n      this.validateEntry();\r\n    }\r\n  }\r\n  validateEntry(){\r\n    let valid = true;\r\n    this.setState({errors: []});\r\n    if(!this.state.startDate || !this.state.endDate || !this.state.description.trim()){\r\n      const error = {\r\n        id: uuidv1(),\r\n        message: \"Requires Start Date, End Date, and Description\"\r\n      };\r\n      this.setState({errors: [...this.state.errors, error]});\r\n      valid = false;\r\n    }\r\n\r\n    if(this.state.startDate > this.state.endDate){\r\n      const error = {\r\n        id: uuidv1(),\r\n        message: \"Start Date must be less then End Date\"\r\n      };\r\n      this.setState({errors: [...this.state.errors, error]});\r\n      valid = false;\r\n    }\r\n    return valid;\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    if(!this.validateEntry()){\r\n      return;\r\n    }\r\n\r\n    const { description, hoursRequested } = this.state;\r\n    let startDate = this.state.startDate.format(\"MM/DD/YYYY\");\r\n    let endDate = this.state.endDate.format(\"MM/DD/YYYY\");\r\n    const credit = 0;\r\n    const used = hoursRequested;\r\n    const id = uuidv1();\r\n    this.props.addPtoEntry({ id, startDate, endDate, description, used, credit });\r\n    this.props.sortPtoEntries();\r\n    this.props.calcEntryBalances();\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  render() {\r\n    const { startDate, endDate, description, hoursRequested } = this.state;\r\n\r\n    return (\r\n       <form onSubmit={this.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3 \">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"startDate\">Start Date</label>\r\n              <DatePicker className=\"form-control\"\r\n                selected={startDate}\r\n                onChange={this.handleStartDatePickerChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3 \">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"endDate\">End Date</label>\r\n              <DatePicker className=\"form-control\"\r\n                selected={endDate}\r\n                onChange={this.handleEndDatePickerChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3 \">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                value={description}\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3 \">\r\n            <button type=\"submit\" className=\"submit-pto-entry btn btn-success btn-lg form-control\">\r\n              Request {hoursRequested} Hours\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className={'alert alert-danger' + (this.state.errors.length > 0 ? '' : 'hide')}>\r\n          {this.state.errors.map(error => (\r\n            <p key={error.id} className=\"red\">{error.message}</p>\r\n          ))}\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst Form = connect(mapStateToProps, mapDispatchToProps)(ConnectedForm);\r\n\r\nexport default Form;","import React, { Component } from 'react';\r\nimport Form from './Form';\r\n\r\nclass PtoFormEntrySection extends Component {\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-12 \">\r\n                        <h3>Add a PTO Entry</h3>\r\n                    </div>\r\n                </div>\r\n                <Form />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PtoFormEntrySection;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        entries: state.entries\r\n     };\r\n};\r\nclass List extends Component {\r\n    getRowClasses(entry){\r\n        const today = new Date().getTime();\r\n        let classes = '';\r\n        if(entry.used > 0){\r\n            classes += ' pto-entries-used-pto-row';\r\n        }\r\n        if(new Date(entry.endDate).getTime() > today){\r\n            classes += ' pto-entries-future-pto-row';\r\n        }\r\n        return classes;\r\n    }\r\n    formatDecimal(value){\r\n        return value ? Math.round(value*100)/100 : 0.00;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"row pto-entries-header\">\r\n                        <div className=\"col-md-2\">\r\n                            Start Date\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                            End Date\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                            Description\r\n                        </div>\r\n                        <div className=\"col-md-1\">\r\n                            Used\r\n                        </div>\r\n                        <div className=\"col-md-1\">\r\n                            Credit\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                            Earned Balance\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                            Projected Balance\r\n                        </div>\r\n                    </div>\r\n                    {this.props.entries.map(entry => (\r\n                        <div className={\"row pto-entries-row \" + this.getRowClasses(entry)} key={entry.id}>\r\n                            <div className=\"col-md-2\">\r\n                                {entry.startDate}\r\n                            </div>\r\n                            <div className=\"col-md-2\">\r\n                                {entry.endDate}\r\n                            </div>\r\n                            <div className=\"col-md-2\">\r\n                                {entry.description}\r\n                            </div>\r\n                            <div className=\"col-md-1\">\r\n                                {this.formatDecimal(entry.used)}\r\n                            </div>\r\n                            <div className=\"col-md-1\">\r\n                                {this.formatDecimal(entry.credit)}\r\n                            </div>\r\n                            <div className=\"col-md-2\">\r\n                                {this.formatDecimal(entry.earnedBalance)}\r\n                            </div>\r\n                            <div className=\"col-md-2\">\r\n                                {this.formatDecimal(entry.projectedBalance)}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps) (List);\r\n","import React, { Component } from 'react';\r\nimport List from './List';\r\n\r\nclass PtoEntries extends Component {\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12 \">\r\n                        <h3>Pto Entries</h3>\r\n                    </div>\r\n                </div>\r\n                <List/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PtoEntries;","const defaultState = { \r\n    rollover: 38.82,\r\n    accrualRate: (20 * 8)/12,\r\n    entries: []\r\n};\r\n\r\nexport default defaultState;","import defaultState from './defaultState';\r\nimport { actions } from './actions';\r\n\r\nconst reducer = function (state = defaultState, action) {\r\n    switch(action.type) {\r\n        case actions.ADD_PTO_ENTRY:\r\n         return { ...state, entries: [...state.entries, action.payload] };\r\n        case actions.SORT_PTO_ENTRIES:\r\n            let sortedEntries = state.entries.slice(0);\r\n            sortedEntries.sort( (a,b) =>{\r\n                let aStartDate = new Date(a.startDate).getTime();\r\n                let bStartDate = new Date(b.startDate).getTime();\r\n                let aEndDate = new Date(a.endDate).getTime();\r\n                let bEndDate = new Date(b.endDate).getTime();\r\n\r\n                if(aStartDate === bStartDate)\r\n                    return bEndDate - aEndDate;\r\n                \r\n                return aStartDate - bStartDate ;\r\n            });\r\n            return { ...state, entries: sortedEntries};\r\n        case actions.CALC_ENTRY_BALANCES:\r\n            let balanceCalculatedEntries = state.entries.slice(0);\r\n            let earnedBalance = 0;\r\n            let monthsInYear = 12;\r\n            let projectedBalance = state.rollover + state.accrualRate * monthsInYear;\r\n            balanceCalculatedEntries.forEach(entry =>{\r\n                earnedBalance = entry.credit - entry.used + earnedBalance;\r\n                projectedBalance = projectedBalance - entry.used;\r\n                entry.earnedBalance = earnedBalance;\r\n                entry.projectedBalance = projectedBalance;\r\n            });\r\n            return { ...state, entries: balanceCalculatedEntries};\r\n        case actions.REQUEST_PTO_ENTRIES:\r\n            return { ...state, loading: true};\r\n        case actions.RECEIVED_PTO_ENTRIES:\r\n            return { ...state, entries: action.payload, loading: false}\r\n        default:\r\n         return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { logger } from 'redux-logger'\r\n\r\nimport reducer from '../reducers';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk, logger));\r\n\r\n\r\nexport default store;","import React, { Component } from 'react';\n\n\nimport Header from './Header';\nimport PtoGeneralInfo from './PtoGeneralInfo';\nimport PtoFormEntrySection from './PtoFormEntrySection';\nimport PtoEntries from './PtoEntries';\n\nimport store from '../store/store';\nimport {fetchPtoEntries } from '../reducers/actions';\n\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    store.dispatch(fetchPtoEntries());\n  } \n\n  render() {\n    return (\n      <div className=\"container\">\n        <Header />\n\n        <PtoGeneralInfo />\n\n        <PtoFormEntrySection />\n\n        <PtoEntries />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport store from './store/store';\n\nReactDOM.render(\n    \n    <Provider store={store}>\n        <App />\n    </Provider>, \n\n    document.getElementById('root')\n);\n"],"sourceRoot":""}