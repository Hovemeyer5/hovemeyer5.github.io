{"version":3,"sources":["components/Header.js","reducers/actions.js","reducers/defaultState.js","reducers/index.js","store/store.js","components/PtoGeneralInfo.js","components/Form.js","components/PtoEntry.js","components/List.js","components/PtoEntries.js","components/App.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","actions","sortPtoEntries","type","calcEntryBalances","reqestPtoEntries","receivedPtoEntries","payload","defaultState","rollover","accrualRate","entries","initialPTOEntry","id","uuidv1","startDate","Date","toLocaleDateString","endDate","description","used","credit","push","i","month","acrrualEntry","reducer","state","arguments","length","undefined","action","Object","objectSpread","toConsumableArray","concat","sort","b","aStartDate","getTime","bStartDate","aEndDate","bEndDate","earnedBalance","projectedBalance","forEach","entry","loading","store","createStore","applyMiddleware","thunk","logger","PtoGeneralInfo","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dispatch","fetch","then","response","json","error","console","log","today","lastEntryBeforeToday","Math","round","lastEntry","props","getEarnedBalance","getProjectedBalance","connect","ConnectedForm","initialState","moment","hoursRequested","errors","handleChange","bind","assertThisInitialized","handleStartDatePickerChange","handleEndDatePickerChange","handleSubmit","firstDate","secondDate","date1","date2","timeDiff","abs","ceil","event","setState","defineProperty","target","value","validateEntry","daysBetween","date","setHoursRequested","valid","trim","message","preventDefault","_this$state","format","addPtoEntry","_this$state2","onSubmit","htmlFor","react_datepicker_es","selected","onChange","required","map","key","Form","PtoEntry","components_Form","List","classes","getRowClasses","PtoEntries","components_List","App","components_Header","components_PtoGeneralInfo","components_PtoEntry","components_PtoEntries","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"yLAeeA,mLAVR,OACKC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,8BANCC,aCFRC,EACM,gBADNA,EAES,mBAFTA,EAGY,sBAHZA,EAIY,sBAJZA,EAKa,uBAIbC,EAAiB,iBAAQ,CAAEC,KAAMF,IACjCG,EAAoB,iBAAO,CAAED,KAAMF,IAEnCI,EAAmB,iBAAO,CAAEF,KAAMF,IAClCK,EAAqB,SAACC,GAAD,MAAc,CAAEJ,KAAMF,EAA8BM,QAASA,iECXzFC,EAAe,CACjBC,SAAU,MACVC,YAAc,IAAQ,GACtBC,QAAS,IAGb,GAAGH,EAAaC,SAAW,EAAE,CACzB,IAAMG,EAAkB,CACtBC,GAAIC,MACJC,UAAW,IAAIC,KAAK,YAAYC,qBAChCC,QAAS,IAAIF,KAAK,YAAYC,qBAC9BE,YAAa,uBACbC,KAAM,EACNC,OAAQb,EAAaC,UAEvBD,EAAaG,QAAQW,KAAKV,GAE9B,IAAI,IAAIW,EAAI,EAAGA,GAAK,GAAIA,IAAI,CACxB,IAAIC,EAAQD,EAAI,GAAK,IAAMA,EAAIA,EACzBE,EAAe,CACjBZ,GAAIC,MACJC,UAAW,IAAIC,KAAKQ,EAAQ,UAAUP,qBACtCC,QAAS,IAAIF,KAAKQ,EAAQ,UAAUP,qBACpCE,YAAaK,EAAQ,iBACrBJ,KAAM,EACNC,OAAQb,EAAaE,aAEvBF,EAAaG,QAAQW,KAAKG,GAGjBjB,QCQAkB,EArCC,WAAwC,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBpB,EAAcuB,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,OAAOC,EAAO5B,MACV,KAAKF,EACJ,OAAO+B,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmBhB,QAAQqB,OAAAE,EAAA,EAAAF,CAAKL,EAAMhB,SAAZwB,OAAA,CAAqBJ,EAAOxB,YACvD,KAAKN,EAYD,OAXA0B,EAAMhB,QAAQyB,KAAM,SAACvC,EAAEwC,GACnB,IAAIC,EAAa,IAAItB,KAAKnB,EAAEkB,WAAWwB,UACnCC,EAAa,IAAIxB,KAAKqB,EAAEtB,WAAWwB,UACnCE,EAAW,IAAIzB,KAAKnB,EAAEqB,SAASqB,UAC/BG,EAAW,IAAI1B,KAAKqB,EAAEnB,SAASqB,UAEnC,OAAGD,IAAeE,EACPE,EAAWD,EAEfH,EAAaE,IAEjBb,EACX,KAAK1B,EACD,IAAI0C,EAAgB,EAEhBC,EAAmBjB,EAAMlB,SADV,GACqBkB,EAAMjB,YAO9C,OANAiB,EAAMhB,QAAQkC,QAAQ,SAAAC,GAClBH,EAAgBG,EAAMzB,OAASyB,EAAM1B,KAAOuB,EAC5CC,GAAsCE,EAAM1B,KAC5C0B,EAAMH,cAAgBA,EACtBG,EAAMF,iBAAmBA,IAEtBjB,EACX,KAAK1B,EACD,OAAO+B,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmBoB,SAAS,IAChC,KAAK9C,EACD,OAAO+B,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmBhB,QAASoB,EAAOxB,QAASwC,SAAS,IACzD,QACC,OAAOpB,IC3BDqB,EAHDC,YAAYvB,EAASwB,YAAgBC,IAAOC,WCOpDC,cACH,SAAAA,IAAa,IAAAC,EAAA,OAAAtB,OAAAuB,EAAA,EAAAvB,CAAAwB,KAAAH,GACRC,EAAAtB,OAAAyB,EAAA,EAAAzB,CAAAwB,KAAAxB,OAAA0B,EAAA,EAAA1B,CAAAqB,GAAAM,KAAAH,OACAR,EAAMY,SAAS1D,KACf8C,EAAMY,SAASxD,KAEf4C,EAAMY,SJHH,SAAUA,GAEf,OADAA,EAASvD,KACFwD,MAAK,kDACXC,KACE,SAAAC,GAAQ,OAAIA,EAASC,QACrB,SAAAC,GAAK,OAAIC,QAAQC,IAAI,qBAAsBF,KAE7CH,KAAK,SAACvD,GACJqD,EAAStD,EAAmBC,QIVrB+C,gFAOI3C,GAChB,IAAIyD,GAAQ,IAAIpD,MAAOuB,UACnB8B,EAAuB1D,EAAQ,GAMnC,OALAA,EAAQkC,QAAQ,SAAAC,GACRsB,EAAQ,IAAIpD,KAAK8B,EAAM5B,SAASqB,YAC/B8B,EAAuBvB,KAGzBwB,KAAKC,MAAyC,IAAnCF,EAAqB1B,eAAmB,gDAEvChC,GACnB,IAAM6D,EAAY7D,EAAQ6C,KAAKiB,MAAM9D,QAAQkB,OAAO,GACpD,OAAOyC,KAAKC,MAAiC,IAA3BC,EAAU5B,kBAAsB,qCAG9C,IAAMD,EAAgBa,KAAKkB,iBAAiBlB,KAAKiB,MAAM9D,SACjDiC,EAAmBY,KAAKmB,oBAAoBnB,KAAKiB,MAAM9D,SAE9D,OACIf,EAAAC,EAAAC,cAAA,WACKF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,yBACC,IAAIkB,MAAOC,sBAEhBrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,gCACC0D,KAAKiB,MAAMhE,UAEhBb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,+BACCwE,KAAKC,MAA6B,IAAvBf,KAAKiB,MAAM/D,aAAiB,MAGhDd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,oCAC0B,GAAzB0D,KAAKiB,MAAM/D,aAEhBd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,6BACC6C,GAEL/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,gCACC8C,YArDI5C,aA8Dd4E,cAtES,SAAAjD,GACpB,MAAO,CACHlB,SAAUkB,EAAMlB,SAChBC,YAAaiB,EAAMjB,YACnBC,QAASgB,EAAMhB,UAkERiE,CAA0BvB,mDCvDnCwB,cAQJ,SAAAA,IAAc,IAAAvB,EAAA,OAAAtB,OAAAuB,EAAA,EAAAvB,CAAAwB,KAAAqB,IACZvB,EAAAtB,OAAAyB,EAAA,EAAAzB,CAAAwB,KAAAxB,OAAA0B,EAAA,EAAA1B,CAAA6C,GAAAlB,KAAAH,QARFsB,aAAe,CACb/D,UAAWgE,MACX7D,QAAS6D,MACT5D,YAAa,GACb6D,eAAgB,EAChBC,OAAQ,IAKR3B,EAAK3B,MAAQ2B,EAAKwB,aAElBxB,EAAK4B,aAAe5B,EAAK4B,aAAaC,KAAlBnD,OAAAoD,EAAA,EAAApD,QAAAoD,EAAA,EAAApD,CAAAsB,KACpBA,EAAK+B,4BAA8B/B,EAAK+B,4BAA4BF,KAAjCnD,OAAAoD,EAAA,EAAApD,QAAAoD,EAAA,EAAApD,CAAAsB,KACnCA,EAAKgC,0BAA4BhC,EAAKgC,0BAA0BH,KAA/BnD,OAAAoD,EAAA,EAAApD,QAAAoD,EAAA,EAAApD,CAAAsB,KACjCA,EAAKiC,aAAejC,EAAKiC,aAAaJ,KAAlBnD,OAAAoD,EAAA,EAAApD,QAAAoD,EAAA,EAAApD,CAAAsB,KARRA,2EAUFkC,EAAWC,GACrB,IAAIC,EAAQ,IAAI1E,KAAKwE,GAAWjD,UAC5BoD,EAAQ,IAAI3E,KAAKyE,GAAYlD,UAC7BqD,EAAWtB,KAAKuB,IAAIF,EAAQD,GAGhC,OADAE,GADgB,MAEqB,EAA9BtB,KAAKwB,KAAKF,EAFD,4CAILG,GACXvC,KAAKwC,SAALhE,OAAAiE,EAAA,EAAAjE,CAAA,GAAiB+D,EAAMG,OAAOrF,GAAKkF,EAAMG,OAAOC,QAC7C3C,KAAK7B,MAAMsD,OAAOpD,OAAS,GAC5B2B,KAAK4C,0DAGSrF,EAAWG,GAC3B,GAAGH,GAAaG,EAAQ,CACtB,IAAI8D,EAAiBxB,KAAK6C,YAAYtF,EAAWG,GACjDsC,KAAKwC,SAAS,CAAChB,eAAgBA,yDAGPsB,GAC1B9C,KAAKwC,SAAS,CAAEjF,UAAWuF,IAC3B9C,KAAK+C,kBAAkBD,EAAM9C,KAAK7B,MAAMT,SACrCsC,KAAK7B,MAAMsD,OAAOpD,OAAS,GAC5B2B,KAAK4C,kEAGiBE,GACxB9C,KAAKwC,SAAS,CAAE9E,QAASoF,IACzB9C,KAAK+C,kBAAkB/C,KAAK7B,MAAMZ,UAAWuF,GAC1C9C,KAAK7B,MAAMsD,OAAOpD,OAAS,GAC5B2B,KAAK4C,wDAIP,IAAII,GAAQ,EAEZ,GADAhD,KAAKwC,SAAS,CAACf,OAAQ,MACnBzB,KAAK7B,MAAMZ,YAAcyC,KAAK7B,MAAMT,UAAYsC,KAAK7B,MAAMR,YAAYsF,OAAO,CAChF,IAAMxC,EAAQ,CACZpD,GAAIC,MACJ4F,QAAS,kDAEXlD,KAAKwC,SAAS,CAACf,OAAOjD,OAAAE,EAAA,EAAAF,CAAKwB,KAAK7B,MAAMsD,QAAjB9C,OAAA,CAAyB8B,MAC9CuC,GAAQ,EAGV,GAAGhD,KAAK7B,MAAMZ,UAAYyC,KAAK7B,MAAMT,QAAQ,CAC3C,IAAM+C,EAAQ,CACZpD,GAAIC,MACJ4F,QAAS,yCAEXlD,KAAKwC,SAAS,CAACf,OAAOjD,OAAAE,EAAA,EAAAF,CAAKwB,KAAK7B,MAAMsD,QAAjB9C,OAAA,CAAyB8B,MAC9CuC,GAAQ,EAEV,OAAOA,uCAGIT,GAEX,GADAA,EAAMY,iBACFnD,KAAK4C,gBAAT,CAFkB,IAAAQ,EAMsBpD,KAAK7B,MAArCR,EANUyF,EAMVzF,YAAa6D,EANH4B,EAMG5B,eACjBjE,EAAYyC,KAAK7B,MAAMZ,UAAU8F,OAAO,cACxC3F,EAAUsC,KAAK7B,MAAMT,QAAQ2F,OAAO,cAElCzF,EAAO4D,EACPnE,EAAKC,MACX0C,KAAKiB,MAAMqC,YAAY,CAAEjG,KAAIE,YAAWG,UAASC,cAAaC,OAAMC,OAHrD,IAIfmC,KAAKiB,MAAMvE,iBACXsD,KAAKiB,MAAMrE,oBACXoD,KAAKwC,SAASxC,KAAKsB,gDAGZ,IAAAiC,EACqDvD,KAAK7B,MAAzDZ,EADDgG,EACChG,UAAWG,EADZ6F,EACY7F,QAASC,EADrB4F,EACqB5F,YAAa6D,EADlC+B,EACkC/B,eAEzC,OACGpF,EAAAC,EAAAC,cAAA,QAAMkH,SAAUxD,KAAK+B,cACpB3F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOmH,QAAQ,aAAf,cACArH,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAYnH,UAAU,eACpBoH,SAAUpG,EACVqG,SAAU5D,KAAK6B,gCAIrBzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOmH,QAAQ,WAAf,YACArH,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAYnH,UAAU,eACpBoH,SAAUjG,EACVkG,SAAU5D,KAAK8B,8BAIrB1F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOmH,QAAQ,eAAf,eACArH,EAAAC,EAAAC,cAAA,SACEK,KAAK,OACLJ,UAAU,eACVc,GAAG,cACHsF,MAAOhF,EACPiG,SAAU5D,KAAK0B,aACfmC,UAAQ,MAIdzH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,UAAQK,KAAK,SAASJ,UAAU,wDAAhC,WACWiF,EADX,YAKJpF,EAAAC,EAAAC,cAAA,OAAKC,UAAW,sBAAwByD,KAAK7B,MAAMsD,OAAOpD,OAAS,EAAI,GAAK,SACzE2B,KAAK7B,MAAMsD,OAAOqC,IAAI,SAAArD,GAAK,OAC1BrE,EAAAC,EAAAC,cAAA,KAAGyH,IAAKtD,EAAMpD,GAAId,UAAU,OAAOkE,EAAMyC,oBA1IzB1G,aAoJbwH,EAFF5C,YAtJW,SAAAjD,GACtB,MAAO,CAAEhB,QAASgB,EAAMhB,UATC,SAAAiD,GACzB,MAAO,CACLkD,YAAa,SAAAhE,GAAK,OAAIc,ELFC,SAAAd,GAAK,MAAK,CAAE3C,KAAMF,EAAuBM,QAASuC,GKE1CgE,CAAYhE,KAC3C5C,eAAgB,kBAAM0D,EAAS1D,MAC/BE,kBAAmB,kBAAMwD,EAASxD,QA0JzBwE,CAA6CC,GCnJ3C4C,mLAbP,OACI7H,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,+BAGRF,EAAAC,EAAAC,cAAC4H,EAAD,cAVO1H,aCOjB2H,wLACY7E,GACV,IAAMsB,GAAQ,IAAIpD,MAAOuB,UACrBqF,EAAU,GAOd,OANG9E,EAAM1B,KAAO,IACZwG,GAAW,6BAEZ,IAAI5G,KAAK8B,EAAM5B,SAASqB,UAAY6B,IACnCwD,GAAW,+BAERA,mCAEF,IAAAtE,EAAAE,KACL,OACI5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,cAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,YAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,eAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,QAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,UAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,kBAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,sBAIHyD,KAAKiB,MAAM9D,QAAQ2G,IAAI,SAAAxE,GAAK,OACzBlD,EAAAC,EAAAC,cAAA,OAAKC,UAAW,uBAAyBuD,EAAKuE,cAAc/E,GAAQyE,IAAKzE,EAAMjC,IAC3EjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACV+C,EAAM/B,WAEXnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACV+C,EAAM5B,SAEXtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACV+C,EAAM3B,aAEXvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACVuE,KAAKC,MAAiB,IAAXzB,EAAM1B,MAAU,KAEhCxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACVuE,KAAKC,MAAmB,IAAbzB,EAAMzB,QAAY,KAElCzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACVuE,KAAKC,MAA0B,IAApBzB,EAAMH,eAAmB,KAEzC/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACVuE,KAAKC,MAA6B,IAAvBzB,EAAMF,kBAAsB,iBA5DrD5C,aAsEJ4E,cA7ES,SAAAjD,GACpB,MAAO,CACHhB,QAASgB,EAAMhB,QACfF,SAAUkB,EAAMlB,SAChBC,YAAaiB,EAAMjB,cAyEZkE,CAA0B+C,GC7D1BG,mLAbP,OACIlI,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,2BAGRF,EAAAC,EAAAC,cAACiI,EAAD,cAVS/H,aCuBVgI,mLAdX,OACEpI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACmI,EAAD,MAEArI,EAAAC,EAAAC,cAACoI,EAAD,MAEAtI,EAAAC,EAAAC,cAACqI,EAAD,MAEAvI,EAAAC,EAAAC,cAACsI,EAAD,cAXUpI,aCAlBqI,IAASC,OAEL1I,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAUvF,MAAOA,GACbpD,EAAAC,EAAAC,cAAC0I,EAAD,OAGJC,SAASC,eAAe","file":"static/js/main.87f8b7f1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n   \r\n   render() {\r\n       return (\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-12\">\r\n                    <h1 className=\"app-header\">React PTO Tracker</h1>\r\n                </div>\r\n            </div>\r\n        ); \r\n    }\r\n};\r\n\r\nexport default Header;","export const actions = {\r\n    ADD_PTO_ENTRY: 'ADD_PTO_ENTRY',\r\n    SORT_PTO_ENTRIES: 'SORT_PTO_ENTRIES',\r\n    CALC_ENTRY_BALANCES: 'CALC_ENTRY_BALANCES',\r\n    REQUEST_PTO_ENTRIES: 'REQUEST_PTO_ENTRIES',\r\n    RECEIVED_PTO_ENTRIES: 'RECEIVED_PTO_ENTIRES'\r\n};\r\n\r\nexport const addPtoEntry = entry => ({ type: actions.ADD_PTO_ENTRY, payload: entry });\r\nexport const sortPtoEntries = () => ( { type: actions.SORT_PTO_ENTRIES});\r\nexport const calcEntryBalances = () => ({ type: actions.CALC_ENTRY_BALANCES});\r\n\r\nexport const reqestPtoEntries = () => ({ type: actions.REQUEST_PTO_ENTRIES});\r\nexport const receivedPtoEntries = (payload) => ({ type: actions.RECEIVED_PTO_ENTRIES, payload: payload});\r\n\r\nexport function fetchPtoEntries() {\r\n    return function (dispatch) {\r\n      dispatch(reqestPtoEntries());\r\n      return fetch(`http://yahst.com/wt/ptotracker/api/initial.php`)\r\n      .then(\r\n         response => response.json(),\r\n         error => console.log('An error occurred.', error),\r\n        )\r\n      .then((payload) => {\r\n         dispatch(receivedPtoEntries(payload));\r\n      },\r\n     );\r\n    };\r\n   }","import uuidv1 from \"uuid\";\r\n\r\nconst defaultState = { \r\n    rollover: 38.82,\r\n    accrualRate: (20 * 8)/12,\r\n    entries: []\r\n};\r\n\r\nif(defaultState.rollover > 0){\r\n    const initialPTOEntry = {\r\n      id: uuidv1(),\r\n      startDate: new Date('01/01/19').toLocaleDateString(),\r\n      endDate: new Date('01/01/19').toLocaleDateString(),\r\n      description: \"2019 Initial Balance\",\r\n      used: 0.00,\r\n      credit: defaultState.rollover\r\n    }\r\n    defaultState.entries.push(initialPTOEntry);\r\n}\r\nfor(let i = 1; i <= 12; i++){\r\n    let month = i < 10 ? \"0\" + i : i;\r\n    const acrrualEntry = {\r\n        id: uuidv1(),\r\n        startDate: new Date(month + \"/01/19\").toLocaleDateString(),\r\n        endDate: new Date(month + \"/01/19\").toLocaleDateString(),\r\n        description: month + \"/01/19 Acrrual\",\r\n        used: 0.00,\r\n        credit: defaultState.accrualRate\r\n      }\r\n      defaultState.entries.push(acrrualEntry);\r\n}\r\n\r\nexport default defaultState;","import defaultState from './defaultState';\r\nimport { actions } from './actions';\r\n\r\nconst reducer = function (state = defaultState, action) {\r\n    switch(action.type) {\r\n        case actions.ADD_PTO_ENTRY:\r\n         return { ...state, entries: [...state.entries, action.payload] };\r\n        case actions.SORT_PTO_ENTRIES:\r\n            state.entries.sort( (a,b) =>{\r\n                let aStartDate = new Date(a.startDate).getTime();\r\n                let bStartDate = new Date(b.startDate).getTime();\r\n                let aEndDate = new Date(a.endDate).getTime();\r\n                let bEndDate = new Date(b.endDate).getTime();\r\n\r\n                if(aStartDate === bStartDate)\r\n                    return bEndDate - aEndDate;\r\n                \r\n                return aStartDate - bStartDate ;\r\n            });\r\n            return state;\r\n        case actions.CALC_ENTRY_BALANCES:\r\n            let earnedBalance = 0;\r\n            let monthsInYear = 12;\r\n            let projectedBalance = state.rollover + state.accrualRate * monthsInYear;\r\n            state.entries.forEach(entry =>{\r\n                earnedBalance = entry.credit - entry.used + earnedBalance;\r\n                projectedBalance = projectedBalance - entry.used;\r\n                entry.earnedBalance = earnedBalance;\r\n                entry.projectedBalance = projectedBalance;\r\n            });\r\n            return state;\r\n        case actions.REQUEST_PTO_ENTRIES:\r\n            return { ...state, loading: true};\r\n        case actions.RECEIVED_PTO_ENTRIES:\r\n            return { ...state, entries: action.payload, loading: false}\r\n        default:\r\n         return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { logger } from 'redux-logger'\r\n\r\nimport reducer from '../reducers';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk, logger));\r\n\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport { connect} from 'react-redux';\r\nimport { sortPtoEntries, calcEntryBalances, fetchPtoEntries } from '../reducers/actions';\r\nimport store from '../store/store';\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        rollover: state.rollover,\r\n        accrualRate: state.accrualRate,\r\n        entries: state.entries\r\n    };\r\n};\r\n\r\nclass PtoGeneralInfo extends Component {\r\n   constructor(){\r\n        super();\r\n        store.dispatch(sortPtoEntries());\r\n        store.dispatch(calcEntryBalances());\r\n        debugger;\r\n        store.dispatch(fetchPtoEntries());\r\n   }\r\n   getEarnedBalance(entries){\r\n    let today = new Date().getTime();\r\n    let lastEntryBeforeToday = entries[0];\r\n    entries.forEach(entry =>{\r\n         if(today > new Date(entry.endDate).getTime()){\r\n             lastEntryBeforeToday = entry;\r\n         }\r\n    });\r\n    return Math.round(lastEntryBeforeToday.earnedBalance*100)/100;\r\n   }\r\n   getProjectedBalance(entries){\r\n    const lastEntry = entries[this.props.entries.length-1];\r\n    return Math.round(lastEntry.projectedBalance*100)/100;\r\n   }\r\n   render() {\r\n        const earnedBalance = this.getEarnedBalance(this.props.entries);\r\n        const projectedBalance = this.getProjectedBalance(this.props.entries);\r\n\r\n       return (\r\n           <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <label>Today: </label>\r\n                        {new Date().toLocaleDateString()}\r\n                    </div>\r\n                    <div className=\"col-md-4 middle\">\r\n                        <label>2018 Rollover: </label>\r\n                        {this.props.rollover}\r\n                    </div>\r\n                    <div className=\"col-md-4 last\">\r\n                        <label>Accrual Rate: </label>\r\n                        {Math.round(this.props.accrualRate*100)/100}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <label>Projected Accrual: </label>\r\n                        {this.props.accrualRate * 12}\r\n                    </div>\r\n                    <div className=\"col-md-4 middle\">\r\n                        <label>Earned PTO: </label>\r\n                        {earnedBalance}\r\n                    </div>\r\n                    <div className=\"col-md-4 last\">\r\n                        <label>Projected PTO: </label>\r\n                        {projectedBalance}\r\n                    </div>\r\n                </div>\r\n           </div>\r\n        \r\n        ); \r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps) (PtoGeneralInfo);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from \"moment\";\r\nimport uuidv1 from \"uuid\";\r\nimport { addPtoEntry, sortPtoEntries, calcEntryBalances } from \"../reducers/actions\";\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addPtoEntry: entry => dispatch(addPtoEntry(entry)),\r\n    sortPtoEntries: () => dispatch(sortPtoEntries()),\r\n    calcEntryBalances: () => dispatch(calcEntryBalances())\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return { entries: state.entries };\r\n};\r\n\r\nclass ConnectedForm extends Component {\r\n  initialState = {\r\n    startDate: moment(),\r\n    endDate: moment(),\r\n    description: \"\",\r\n    hoursRequested: 8,\r\n    errors: []\r\n  };\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = this.initialState;\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleStartDatePickerChange = this.handleStartDatePickerChange.bind(this);\r\n    this.handleEndDatePickerChange = this.handleEndDatePickerChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  daysBetween(firstDate, secondDate){\r\n    let date1 = new Date(firstDate).getTime();\r\n    let date2 = new Date(secondDate).getTime();\r\n    let timeDiff = Math.abs(date2 - date1) ;\r\n    const dayInMS = 1000*3600*24;\r\n    timeDiff += dayInMS;\r\n    return Math.ceil(timeDiff/dayInMS) * 8;\r\n  }\r\n  handleChange(event) {\r\n    this.setState({ [event.target.id]: event.target.value });\r\n    if(this.state.errors.length > 0){\r\n      this.validateEntry();\r\n    }\r\n  }\r\n  setHoursRequested(startDate, endDate){\r\n    if(startDate && endDate){\r\n      let hoursRequested = this.daysBetween(startDate, endDate);\r\n      this.setState({hoursRequested: hoursRequested})\r\n    }\r\n  }\r\n  handleStartDatePickerChange(date){\r\n    this.setState({ startDate: date});\r\n    this.setHoursRequested(date, this.state.endDate);\r\n    if(this.state.errors.length > 0){\r\n      this.validateEntry();\r\n    }\r\n  }\r\n  handleEndDatePickerChange(date){\r\n    this.setState({ endDate: date});\r\n    this.setHoursRequested(this.state.startDate, date);\r\n    if(this.state.errors.length > 0){\r\n      this.validateEntry();\r\n    }\r\n  }\r\n  validateEntry(){\r\n    let valid = true;\r\n    this.setState({errors: []});\r\n    if(!this.state.startDate || !this.state.endDate || !this.state.description.trim()){\r\n      const error = {\r\n        id: uuidv1(),\r\n        message: \"Requires Start Date, End Date, and Description\"\r\n      };\r\n      this.setState({errors: [...this.state.errors, error]});\r\n      valid = false;\r\n    }\r\n\r\n    if(this.state.startDate > this.state.endDate){\r\n      const error = {\r\n        id: uuidv1(),\r\n        message: \"Start Date must be less then End Date\"\r\n      };\r\n      this.setState({errors: [...this.state.errors, error]});\r\n      valid = false;\r\n    }\r\n    return valid;\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    if(!this.validateEntry()){\r\n      return;\r\n    }\r\n\r\n    const { description, hoursRequested } = this.state;\r\n    let startDate = this.state.startDate.format(\"MM/DD/YYYY\");\r\n    let endDate = this.state.endDate.format(\"MM/DD/YYYY\");\r\n    const credit = 0;\r\n    const used = hoursRequested;\r\n    const id = uuidv1();\r\n    this.props.addPtoEntry({ id, startDate, endDate, description, used, credit });\r\n    this.props.sortPtoEntries();\r\n    this.props.calcEntryBalances();\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  render() {\r\n    const { startDate, endDate, description, hoursRequested } = this.state;\r\n\r\n    return (\r\n       <form onSubmit={this.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3 \">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"startDate\">Start Date</label>\r\n              <DatePicker className=\"form-control\"\r\n                selected={startDate}\r\n                onChange={this.handleStartDatePickerChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3 \">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"endDate\">End Date</label>\r\n              <DatePicker className=\"form-control\"\r\n                selected={endDate}\r\n                onChange={this.handleEndDatePickerChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3 \">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                value={description}\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3 \">\r\n            <button type=\"submit\" className=\"submit-pto-entry btn btn-success btn-lg form-control\">\r\n              Request {hoursRequested} Hours\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className={'alert alert-danger' + (this.state.errors.length > 0 ? '' : 'hide')}>\r\n          {this.state.errors.map(error => (\r\n            <p key={error.id} className=\"red\">{error.message}</p>\r\n          ))}\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst Form = connect(mapStateToProps, mapDispatchToProps)(ConnectedForm);\r\n\r\nexport default Form;","import React, { Component } from 'react';\r\nimport Form from './Form';\r\n\r\nclass PtoEntry extends Component {\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-12 \">\r\n                        <h3>Add a PTO Entry</h3>\r\n                    </div>\r\n                </div>\r\n                <Form />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PtoEntry;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        entries: state.entries,\r\n        rollover: state.rollover,\r\n        accrualRate: state.accrualRate\r\n     };\r\n};\r\nclass List extends Component {\r\n    getRowClasses(entry){\r\n        const today = new Date().getTime();\r\n        let classes = '';\r\n        if(entry.used > 0){\r\n            classes += ' pto-entries-used-pto-row';\r\n        }\r\n        if(new Date(entry.endDate).getTime() > today){\r\n            classes += ' pto-entries-future-pto-row';\r\n        }\r\n        return classes;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"row pto-entries-header\">\r\n                        <div className=\"col-md-2\">\r\n                            Start Date\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                            End Date\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                            Description\r\n                        </div>\r\n                        <div className=\"col-md-1\">\r\n                            Used\r\n                        </div>\r\n                        <div className=\"col-md-1\">\r\n                            Credit\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                            Earned Balance\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                            Projected Balance\r\n                        </div>\r\n                    </div>\r\n                    {this.props.entries.map(entry => (\r\n                        <div className={\"row pto-entries-row \" + this.getRowClasses(entry)} key={entry.id}>\r\n                            <div className=\"col-md-2\">\r\n                                {entry.startDate}\r\n                            </div>\r\n                            <div className=\"col-md-2\">\r\n                                {entry.endDate}\r\n                            </div>\r\n                            <div className=\"col-md-2\">\r\n                                {entry.description}\r\n                            </div>\r\n                            <div className=\"col-md-1\">\r\n                                {Math.round(entry.used*100)/100}\r\n                            </div>\r\n                            <div className=\"col-md-1\">\r\n                                {Math.round(entry.credit*100)/100}\r\n                            </div>\r\n                            <div className=\"col-md-2\">\r\n                                {Math.round(entry.earnedBalance*100)/100}\r\n                            </div>\r\n                            <div className=\"col-md-2\">\r\n                                {Math.round(entry.projectedBalance*100)/100}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps) (List);\r\n","import React, { Component } from 'react';\r\nimport List from './List';\r\n\r\nclass PtoEntries extends Component {\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12 \">\r\n                        <h3>Pto Entries</h3>\r\n                    </div>\r\n                </div>\r\n                <List/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PtoEntries;","import React, { Component } from 'react';\n\n\nimport Header from './Header';\nimport PtoGeneralInfo from './PtoGeneralInfo';\nimport PtoEntry from './PtoEntry';\nimport PtoEntries from './PtoEntries';\n\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <div className=\"container\">\n        <Header />\n\n        <PtoGeneralInfo />\n\n        <PtoEntry />\n\n        <PtoEntries />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport store from './store/store';\n\nReactDOM.render(\n    \n    <Provider store={store}>\n        <App />\n    </Provider>, \n\n    document.getElementById('root')\n);\n"],"sourceRoot":""}